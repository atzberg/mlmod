# mlmod_mpi = mlmod, GNU mpicxx compiler, MPI (adjust for given system)

SHELL = /bin/sh

# ---------------------------------------------------------------------
# get svn or git revision numbers to include in the codes 

SVNDEV          := -D'SVN_REV="$(shell svnversion -n ..)"'
GITDEV          := -D'GIT_REV="$(shell git rev-parse HEAD)"'
COMPILEDATETIME := -D'COMPILE_DATE_TIME="$(shell date)"'

#PWD=$(shell pwd)
PWD=.
PATH_MLMOD_PKG=$(PWD)/../../lib/mlmod

ABI_CX11_FLAG=-D_GLIBCXX_USE_CXX11_ABI=1 
$(info atz:ABI_CX11_FLAG=$(ABI_CX11_FLAG))

# ---------------------------------------------------------------------
# compiler/linker settings
# specify flags and libraries needed for your compiler

CC =		mpicxx
CCFLAGS =	-g -O3 $(SVNDEV) $(GITDEV) $(COMPILEDATETIME) $(ABI_CX11_FLAG) 
SHFLAGS =	-fPIC
DEPFLAGS =	-M

LINK =		mpicxx
LINKFLAGS =	-g -O3 -L/usr/lib/x86_64-linux-gnu
LIB = 
SIZE =		size

ARCHIVE =	ar
ARFLAGS =	-rc
SHLIBFLAGS =	-shared

# ---------------------------------------------------------------------
# LAMMPS-specific settings, all OPTIONAL
# specify settings for LAMMPS features you will use
# if you change any -D setting, do full re-compile after "make clean"

# LAMMPS ifdef settings
# see possible settings in Section 2.2 (step 4) of manual

LMP_INC =	-DLAMMPS_GZIP -DLAMMPS_MEMALIGN=64 $(SVNDEV) $(COMPILEDATETIME) -DLAMMPS_PNG -DLAMMPS_JPEG -DLAMMPS_FFMPEG -DLAMMPS_EXCEPTIONS
LMP_PATH=
LMP_LIB= 

# MPI library
# see discussion in Section 2.2 (step 5) of manual
# MPI wrapper compiler/linker can provide this info
# can point to dummy MPI library in src/STUBS as in Makefile.serial
# use -D MPICH and OMPI settings in INC to avoid C++ lib conflicts
# INC = path for mpi.h, MPI compiler settings
# PATH = path for MPI library
# LIB = name of MPI library

MPI_INC =       
MPI_PATH =      
MPI_LIB =	-lmpi

# FFT library
# see discussion in manual
# can be left blank to use provided KISS FFT library
# INC = -DFFT setting, e.g. -DFFT_FFTW, FFT compiler settings
# PATH = path for FFT library
# LIB = name of FFT library

FFT_INC =       -DFFT_FFTW -I/usr/include 
FFT_PATH =      -L/usr/lib/x86_64-linux-gnu
FFT_LIB =	-lfftw3

# JPEG and/or PNG library
# see discussion in Section 2.2 (step 7) of manual
# only needed if -DLAMMPS_JPEG or -DLAMMPS_PNG listed with LMP_INC
# INC = path(s) for jpeglib.h and/or png.h
# PATH = path(s) for JPEG library and/or PNG library
# LIB = name(s) of JPEG library and/or PNG library

JPG_INC =       
JPG_PATH = 	
JPG_LIB=-lpng -ljpeg

# ---------------------------------------------------------------------
# build rules and dependencies
# do not edit this section

include	Makefile.package.settings
include	Makefile.package

$(info  ------------------------------------------)
$(info  From including Makefile.package)
$(info  PKG_SYSINC=$(PKG_SYSINC))
$(info  PKG_SYSLIB=$(PKG_SYSLIB))
$(info  PKG_SYSPATH=$(PKG_SYSPATH))
$(info  ------------------------------------------)

EXTRA_INC = $(LMP_INC) $(PKG_INC) $(PKG_SYSINC) $(MPI_INC) $(FFT_INC) $(JPG_INC)  
EXTRA_PATH = $(LMP_PATH) $(PKG_PATH) $(PKG_SYSPATH) $(MPI_PATH) $(FFT_PATH) $(JPG_PATH) 
EXTRA_LIB = $(LMP_LIB) $(PKG_LIB) $(PKG_SYSLIB) $(MPI_LIB) $(FFT_LIB) $(JPG_LIB) 
EXTRA_CPP_DEPENDS = $(PKG_CPP_DEPENDS)
EXTRA_LINK_DEPENDS = $(PKG_LINK_DEPENDS)

# Path to src files

vpath %.cpp ..
vpath %.h ..

# Link target

$(EXE):	main.o $(LMPLIB) $(EXTRA_LINK_DEPENDS)
	$(LINK) $(LINKFLAGS) main.o $(EXTRA_PATH) $(LMPLINK) $(EXTRA_LIB) $(LIB) -o $@
	$(SIZE) $@

# Library targets

$(ARLIB): $(OBJ) $(EXTRA_LINK_DEPENDS)
	@rm -f ../$(ARLIB)
	$(ARCHIVE) $(ARFLAGS) ../$(ARLIB) $(OBJ)
	@rm -f $(ARLIB)
	@ln -s ../$(ARLIB) $(ARLIB)

$(SHLIB): $(OBJ) $(EXTRA_LINK_DEPENDS)
	@rm -f ../$(SHLIB)
	$(CC) $(CCFLAGS) $(SHFLAGS) $(SHLIBFLAGS) $(EXTRA_PATH) -o ../$(SHLIB) \
		$(OBJ) $(EXTRA_LIB) $(LIB)
	@rm -f $(SHLIB)
	@ln -s ../$(SHLIB) $(SHLIB)

# Compilation rules

%.o:%.cpp
	$(CC) $(CCFLAGS) $(SHFLAGS) $(EXTRA_INC) -c $<

# Individual dependencies

depend : fastdep.exe $(SRC)
	@./fastdep.exe $(EXTRA_INC) -- $^ > .depend || exit 1

fastdep.exe: ../DEPEND/fastdep.c
	cc -O -o $@ $<

sinclude .depend

